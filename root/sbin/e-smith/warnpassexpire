#!/usr/bin/perl -w

#
# NethServer
#
# Copyright (C) 2012 Nethesis srl
#

use strict;
use esmith::ConfigDB;
use esmith::AccountsDB;
use esmith::templates;
use esmith::event;

my $configDb = esmith::ConfigDB->open_ro() or die "Couldn't open ConfigDB\n";
my $expires = $configDb->get_prop("passwordstrength", "PassExpires") || 'yes';

# exit here, if password expiration is not enabled:
if ($expires ne 'yes') {
    exit(0);
}

my %accountsDb = esmith::AccountsDB->as_hash() or die "Couldn't open AccountsDB\n";
my @warnQueue = ();

open(SPH, '/usr/bin/getent shadow |') || die;

while(my $shadowEntry = <SPH>) {
    chomp($shadowEntry);

    # see shadow.h
    my ($namp, $pwdp, $lstchgm, $min, $max, $warn, $inact, $expire) = split(':', $shadowEntry);

    # skip non-user entries and non-active users:
    if( ! defined $accountsDb{$namp} 
	|| $accountsDb{$namp}{'type'} ne 'user'
	|| $accountsDb{$namp}{'__state'} ne 'active'
	) {
	next;
    }

    my $today = int (time / 86400);

    # if max password age is reached, add to @warnQueue
    if ($max > 0 && $today > $lstchgm + $max - $warn) {
	push @warnQueue, [$namp, ($lstchgm + $max) * 86400];
    }
    
}

close(SPH);

foreach(@warnQueue) {
    esmith::event::event_signal('password-expired', @{$_});
}

exit(0);

