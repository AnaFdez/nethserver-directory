#!/usr/bin/perl -w

#----------------------------------------------------------------------
# Copyright (C) 1999, 2000 e-smith, inc.
# Copyright (C) 2012, Nethesis srl
#		
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#		
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
# GNU General Public License for more details.
#		
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA
#----------------------------------------------------------------------

use strict;
use esmith::AccountsDB;
use NethServer::Directory::LDAP;
use NethServer::Directory;

my $accountsDb = esmith::AccountsDB->open_ro;

my $event = shift;
my $userName = shift;

die "Username argument missing." unless defined ($userName);

my $account = $accountsDb->get($userName);

die "Account $userName not found.\n" unless defined $account;

my $type = $account->prop('type') || "unknown";
exit (0) if ($type eq 'ibay');

die "Account $userName is not a user or group account; update LDAP entry failed.\n"
unless (($type eq 'user') || ($type eq 'group') || ($userName eq 'admin'));

#------------------------------------------------------------
# Update LDAP database entry.
#------------------------------------------------------------
my $domain = NethServer::Directory::getInternalDomain();
my $base = NethServer::Directory::getInternalSuffix();
my $ldap = NethServer::Directory::LDAP->new;

my @attrs = ();
my $dn = "uid=$userName,ou=People,$base";
# my $email = $account->prop('EmailAlias') || "$userName\@$domain";
my $phone = $account->prop('Phone') || '';
my $company = $account->prop('Company') || '';
my $dept = $account->prop('Dept') || '';
my $city = $account->prop('City') || '';
my $street = $account->prop('Street') || '';

# push @attrs, (mail => $email);
push @attrs, (telephoneNumber => $phone) unless $phone =~ /^\s*$/;
push @attrs, (o => $company) unless $company =~ /^\s*$/;
push @attrs, (ou => $dept) unless $dept =~ /^\s*$/;
push @attrs, (l => $city) unless $city =~ /^\s*$/;
push @attrs, (street => $street) unless $street =~ /^\s*$/;
    
my %attrs = @attrs;

my $result = $ldap->modify ($dn, replace => \%attrs);
$result->code && warn "failed to modify entry for $dn: ", $result->error ;

exit (0);
