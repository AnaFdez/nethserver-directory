#!/usr/bin/perl -w

#
# Copyright (C) 2013 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use esmith::AccountsDB;

my $accounts = esmith::AccountsDB->open
    or die "Could not open accounts DB";

my $errors = 0;
my $event = shift;
my $groupName = shift;

if ( ! defined $groupName) {
    die "Groupname argument missing." 
}

my $group = $accounts->get($groupName);

if( ! ($group && $group->prop('type') eq 'group')) {
    die "Account $groupName is not a group account; create group failed.\n";
}

my $lock = undef;
my $gid = $group->prop('Gid');

if ( ! $gid) {
    use esmith::lockfile;
    $lock = esmith::lockfile::LockFileOrWait("/var/lib/nethserver/db/accounts");
    $gid = $accounts->get_next_uid;
    $group->set_prop('Gid', $gid);
}

#
# If Uid prop is missing assume uid is equal to gid
#
my $uid = $group->prop('Uid') || $gid;

# Create the user's unique group first
system(
	"/usr/sbin/lgroupadd",
	"-g", $gid,
	$groupName
    ) == 0 or die "Failed to create group $groupName.\n";

# Now create the dummy user account. NOTE: `--surname` triggers
# inetOrgPerson schema in ldapEntry and is required for
# nethserver-directory to work.
system(
    "/usr/sbin/luseradd",
    "-u", $uid,
    "-g", $gid,
    '--surname', $groupName,
    '-M',
    '-s', '/bin/false',
    $groupName
    ) == 0 or die "Failed to create user $groupName.\n";

# Release lock if we have one
$lock && esmith::lockfile::UnlockFile($lock);

# `admin` user is implicit member of all groups; NOTE: libuser 0.56
# with ldap backend seems to fail silently when asked to remove all
# the members of a group; admin here ensure the group contains a
# member at least - Davide Principi <davide.principi@nethesis.it>
if(system("/usr/sbin/lgroupmod", '-M', 'admin', $groupName) != 0) {
    warn "Failed to add `admin` user in group `$groupName` members list.\n";
    $errors ++;
}

exit ($errors == 0 ? 0 : 1);
