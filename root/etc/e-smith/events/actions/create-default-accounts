#!/usr/bin/perl

#
# Copyright (C) 2014 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use esmith::event;
use esmith::AccountsDB;

my $esmithDefaults = "/etc/e-smith/db/accounts/defaults";
my $errors = 0;

my $event = shift;
my $accountsDb = esmith::AccountsDB->open_ro() || die("Could not open Accounts DB");

foreach ($accountsDb->users(), $accountsDb->groups()) {
    my $account = $_->key;
    my $type = $_->prop('type');

    # Create only if account is also a DB default
    if( ! -d "$esmithDefaults/$account") {
	next;
    }

    # Skip if already exists in the system passwd DB
    if(getpwnam($account) || getgrnam($account)) {
	next;
    }

    my $eventName = $type eq 'user' ? 'user-create' : 'group-create';

    if(esmith::event::event_signal($eventName, $account) == 0) {
	$errors++;
	next;
    }

    warn "[INFO] created default $type account \"$account\"\n";
}

exit ($errors == 0 ? 0 : 1);
