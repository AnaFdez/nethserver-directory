#!/usr/bin/perl

use NethServer::Directory;
use esmith::ConfigDB;

my $directory = NethServer::Directory->new;
my $configDb = esmith::ConfigDB->open_ro();
my %ContactDefault = $configDb->get('ContactDefault')->props;
my $internalSuffix = $directory->getInternalSuffix;

my @entries = (
    [ $internalSuffix,
      merge => [
	  objectClass => ['top', 'dcObject', 'organization'],
	  dc => 'directory',
	  o => $ContactDefault{Company},
      ] ],    
    [ "ou=People,$internalSuffix",
      merge => [
	  objectClass => ['top', 'organizationalUnit'],
	  ou => 'People',
      ] ],
    [ "ou=Group,$internalSuffix",
      merge => [
	  objectClass => ['top', 'organizationalUnit'],
	  ou => 'Group',
      ] ],
    [ "ou=Computers,$internalSuffix",
      merge => [
	  objectClass => ['top', 'organizationalUnit'],
	  ou => 'Computers',
      ] ],

    #
    # authentication services accounts (replace with SASL whenever possible):
    #

    [ "cn=libuser,$internalSuffix",
      merge => [
	  objectClass => ['device', 'simpleSecurityObject'],
	  cn => 'libuser',
	  userPassword => $directory->getUserPassword('libuser', 1)
      ] ],
    [ "cn=pam,$internalSuffix",
      merge => [
	  objectClass => ['device', 'simpleSecurityObject'],
	  cn => 'pam',
	  userPassword => $directory->getUserPassword('pam', 1)
      ] ],
    );

foreach(@entries) {
    my $method = @{$_}[1];
    my $message = $directory->$method(@{$_});
    if($message->is_error) {
	warn 'Error modifying `' . @{$_}[0] . '`: ' . join(" ", $message->code, $message->error_name());
    }
}



